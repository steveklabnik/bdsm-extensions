#!/usr/bin/env bash

result=0

log_dir="/var/log/engineyard/$application"
log_file="$log_dir/thin.control.log"
app_dir="/data/$application/current"
app_log_file="$app_dir/log/$environment.log"
pid_dir="/var/run/engineyard/$application"
socket_dir="/var/run/engineyard/$application"
pid_file="thin.pid"
socket_file="$application.thin.sock"
socket_checker="/engineyard/bin/socket_check"

mkdir -p $log_dir
touch $log_file

running_pid=$(ps auxww | grep "[t]hin" | awk '/'$application.thin.$socket'.sock/{print $2}')
$scripts_path/log "info" "running_pid: $running_pid"

start_thin() {
  $scripts_path/log "info" "Starting thin applicatin $application on socket $socket with environment $environment."
  /usr/bin/thin start -d -l $app_log_file -e $environment -c $app_dir -t 60 -P $pid_dir/$pid_file -S $socket_dir/$socket_file -s 6 -o $socket
}

socket_check() {
  if [ -S "$socket_dir/$socket_file" ] ; then
    $scripts_path/log "info" "The socket file exists and is a socket then check it for a response"
    $scripts_path/log "info" "Checking socket ($socket_checker $socket_dir/$socket_file)"
    $socket_checker $socket_dir/$socket_file
    return $?
  else
    $scripts_path/log "info" "Socket file $socket_dir/$socket_file does not exist and/or is not a socket."
    return 1
  fi
}

if [ -f "$pid_dir/$pid_file" ]; then
  $scripts_path/log "info" "Pidfile $pid_dir/$pid_file exists"
  if [ "$running_pid" == "$pid_file_pid" ] ; then
    $scripts_path/log "info" "Pidfile matches the found running pid"
    if [ socket_check -eq 0 ]; then

      $scripts_path/log "info" "Writing $running_pid to the pidfile: $pid_dir/$pid_file"
      echo $running_pid > $pid_dir/$pid_file

      $scripts_path/log "info" "The thin application $application is already running on socket $socket, aborting."
    else
      $scripts_path/log "info" "The thin was unresponsive, force kill to make sure it is not running and start a new thin."
      force_kill_thin $pid_file_pid
      force_kill_thin $running_pid
      start_thin
    fi
  else
    $scripts_path/log "info" "The pidfile pid does not match the running thin's pid."
    force_kill_thin $pid_file_pid
    if [ socket_check -eq 0 ]; then
      $scripts_path/log "info" "The running thin was responsive so write it's pid to the pidfile and exit with success"

      $scripts_path/log "info" "Writing $running_pid to the pidfile: $pid_dir/$pid_file"
      echo $running_pid > $pid_dir/$pid_file

      $scripts_path/log "info" "The thin application $application is already running on socket $socket, aborting."
    else
      $scripts_path/log "info" "The running thin was unresponsive, force kill to make sure it is not running and start a new thin."
      force_kill_thin $pid_file_pid
      force_kill_thin $running_pid
      start_thin
    fi
  fi
else
  $scripts_path/log "info" "The pidfile does not exist"
  if [ -n "$running_pid" ] && [ "$running_pid" -gt 0 ]; then
    $scripts_path/log "info" "There is a thin running"
    if [ socket_check -eq 0 ]; then
      $scripts_path/log "info" "The thin was responsive on the socket is responsive on the socket"

      $scripts_path/log "info" "Writing $running_pid to the pidfile: $pid_dir/$pid_file"
      echo $running_pid > $pid_dir/$pid_file

      $scripts_path/log "info" "The thin application $application is already running on socket $socket, aborting."
    else
      $scripts_path/log "info" "The running thin was unresponsive on the socket, force kill it and start a new thin"
      force_kill_thin $running_pid
      start_thin
    fi
  else
    $scripts_path/log "info" "No thin was running, start a new thin"
    start_thin
  fi
fi

exit $result
