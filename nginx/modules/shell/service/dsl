#!/usr/bin/env bash

nginx_service_setup()
{
  install_template "nginx/nginx.conf" to "${install_path}/etc/nginx/nginx.conf" \
    mode 0644 owner "${service_user}"

  seed_template "${install_path}/etc/nginx/nginx.conf" \
    modules_path "${modules_path}" \
    service "${service}" \
    service_user "${service_user}" \
    service_config_path "${service_config_path}" \
    service_pid_file "${service_pid_file}" \
    service_log_path "${service_log_path}"

  ensure_paths_exist "${install_path}/etc/nginx/health/"

  install_template "nginx/nginx.health" \
    to "${install_path}/etc/nginx/health/nginx.conf" \
    mode 0644 owner "${service_user}"

  install_template "nginx/nginx" to "${install_path}/etc/nginx" \
    mode 0755 owner "${service_user}"

  templates=( "mime.types" "proxy.conf" )

  for template in "${templates[@]}"
  do
    install_template "nginx/${template}" \
      to "${install_path}/etc/nginx/conf/${template}" \
      mode 0644 owner "${service_user}"
  done

  enter "${install_path}"

  replace_content "^user .*;$" with "# No user line for non-root installs "\
    in "${install_path}/etc/nginx/nginx.conf"

  chown_paths --recursive "${service_user}" "${nginx_dirs[@]}" "etc/nginx"
}

nginx_list()
{
  local master_list=("$(ps auxww | head -1)") worker_list=()

  if (( master_pid > 0 ))
  then
    while read -r line
    do
      if [[ "$line" =~ nginx ]]
      then
        if [[ "$line" =~ master ]]
        then
          master_list+=("${line}")
        elif [[ "$line" =~ worker ]]
        then
          worker_list+=("${line}")
        fi
      fi
    done < <(ps auxww | awk '/[n]ginx/')

    array_join master_list "\n"
    echo
    array_join worker_list "\n"
    echo
  else
    log "No Nginx master processes was found."
  fi
}

