#!/usr/bin/env bash

nginx_postinstall()
{
  enter "${install_path}"
  ensure_paths_exist "${nginx_dirs[@]}"

  enter "${install_path}/etc/nginx"
  ensure_paths_exist "${config_dirs[@]}"

  # Cleanup default nginx install messy directory.
  move_files --if-exists "${nginx_files[@]}" to "${install_path}/etc/nginx/conf" \
   from "${install_path}/etc/nginx"

  ensure_paths_exist "${install_path}/config" "${install_path}/etc/nginx/servers"

  user_create_if_missing "${service_user}" with group "${service_user}"

  install_template "nginx.conf" to "${install_path}/etc/nginx/nginx.conf" \
    mode 0644 owner "${service_user}"

  seed_template "${install_path}/etc/nginx/nginx.conf" \
    modules_path "${modules_path}" \
    service "${service}" \
    service_user "${service_user}" \
    service_config_path "${service_config_path}" \
    service_pid_file "${service_pid_file}" \
    service_log_path "${service_log_path}"

  ensure_paths_exist "${install_path}/etc/nginx/health/"

  install_template "nginx.health" \
    to "${install_path}/etc/nginx/health/nginx.conf" \
    mode 0644 owner "${service_user}"

  install_template "nginx" to "${install_path}/etc/nginx" \
    mode 0755 owner "${service_user}"

  templates=( "mime.types" "proxy.conf" )

  for template in "${templates[@]}"
  do
    install_template "${template}" \
      to "${install_path}/etc/nginx/conf/${template}" \
      mode 0644 owner "${service_user}"
  done
  enter "${install_path}"

  replace_content "^user .*;$" with "# No user line for non-root installs "\
    in "${install_path}/etc/nginx/nginx.conf"

  chown_paths --recursive "${service_user}" "${nginx_dirs[@]}" "etc/nginx"
}

nginx_postactivate()
{
  if user_is_root
  then
    if (( ${force_flag:=0} == 1 ))
    then
      remove_paths "${service_config_path}"
    fi

    if ! file_exists "${service_config_path}/nginx.conf"
    then
      link --force "${install_base_path}/active/etc/nginx" \
        "${service_config_path}"

      enter "${service_config_path}"

      # TODO: add from parameter from remove_files
      remove_files "${nginx_files[@]}"
    fi

    link --force "${install_base_path}/active/sbin/nginx" \
      "${active_path}/sbin/nginx"
  fi
}


