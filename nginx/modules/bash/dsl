#!/usr/bin/env bash

nginx_postinstall()
{
  enter "${install_path}"
  ensure_paths_exist "${nginx_dirs[@]}"

  enter "${install_path}/etc/nginx"
  ensure_paths_exist "${config_dirs[@]}"

  # Cleanup default nginx install messy directory.
  enter "${install_path}/etc/nginx"
  move_files "${nginx_files[@]}" to "${install_path}/etc/nginx/conf"

  ensure_paths_exist "${install_path}/config" "${install_path}/etc/nginx/servers"

  install_template "nginx.conf" to "${install_path}/etc/nginx/nginx.conf" \
    mode 0644 owner "${service_user}"

  install_template "nginx" to "${init_scripts_path}/etc/nginx" \
    mode 0755 owner "${service_user}"

  templates=( "mime.types" "proxy.conf" )
  for template in "${templates[@]}"
  do
    install_template "${template}" to "${install_path}/etc/nginx/conf/${template}" \
      mode 0644 owner "${service_user}"
  done
  enter "${install_path}"

  chown_paths --recursive "nginx:nginx" "${nginx_dirs[@]}" \
    "${install_path}/etc/nginx" "${install_path}/etc/nginx"
}

nginx_postactivate()
{
  if user_is_root
  then
    if (( ${force_flag:-0} == 1 ))
    then
      remove_paths "/etc/nginx"
    fi

    if ! file_exists "/etc/nginx/nginx.conf"
    then
      link --force "${install_base_path}/active/etc/nginx" "/etc/nginx"
      enter "/etc/nginx/"
      remove_files "${nginx_files[@]}"
    fi
    link --force "${active_path}/sbin/nginx" to "/usr/sbin/nginx"
  fi
}
